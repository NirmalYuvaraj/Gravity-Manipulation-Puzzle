//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/playeraction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Playeraction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Playeraction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""playeraction"",
    ""maps"": [
        {
            ""name"": ""controll"",
            ""id"": ""d25d58f0-ee64-4423-86aa-37cabc17e8fb"",
            ""actions"": [
                {
                    ""name"": ""move"",
                    ""type"": ""Value"",
                    ""id"": ""43edfde7-edd1-468a-a036-8feebc6523a0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""mouse"",
                    ""type"": ""Value"",
                    ""id"": ""d70a0f2e-1fb8-48e6-8423-5fbf788afb38"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""jump"",
                    ""type"": ""Button"",
                    ""id"": ""2a4b9ad9-d04c-4314-be0b-a5f0924dc54c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""sprint"",
                    ""type"": ""Button"",
                    ""id"": ""3d0f45ca-0560-4ebd-a3dc-b54daa89d165"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""leftclick"",
                    ""type"": ""Button"",
                    ""id"": ""ccc6f553-8619-48bb-9eca-5e01c5918cb6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""uparrow"",
                    ""type"": ""Button"",
                    ""id"": ""8ed8eb02-a9ab-4476-a85d-f2ba6475ca0a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""leftarrow"",
                    ""type"": ""Button"",
                    ""id"": ""5354285c-c26e-492f-a92a-ad6c43c07619"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""rightarrow"",
                    ""type"": ""Button"",
                    ""id"": ""306715d3-9d45-4065-bc04-7883f11c4046"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""7cde791a-3e64-4bcb-a19d-25f65ad11b14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""enter"",
                    ""type"": ""Button"",
                    ""id"": ""0f0a41ec-477a-4657-8062-82e4dbc61e3b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""4e5f7b68-91d8-4921-8bd3-b1a704e0d096"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""afd8804a-f97e-4116-b4b2-0d5ae8d1ddec"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b980eca6-a260-4694-9ffc-891f11b8c5d2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0aaeb7a8-0a65-4a82-a7fc-f7586377ffdf"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3119e62b-5dee-4330-9bae-589973b19492"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""296aeec7-11d4-4ed3-afbb-15d5cba054fa"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14bfcb4a-4d81-404f-b69f-c164e16b0aa3"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be9bf236-adfc-47c5-8330-7856a21ebb9e"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8216bc11-7eb4-4278-86fe-840f9d81ae67"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""leftclick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec0cc11c-df09-45e6-8dfc-e52cddd8b945"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""uparrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""167e9acb-9602-4fb8-babe-7f4669219eb5"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""leftarrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1fc77110-b0fb-4fd7-a841-4e00c3eda9e1"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""rightarrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eedeb26f-1c7a-43e6-b583-3957485c2cc1"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5ce427d-1cbc-43d3-8c35-04e7fe885aee"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // controll
        m_controll = asset.FindActionMap("controll", throwIfNotFound: true);
        m_controll_move = m_controll.FindAction("move", throwIfNotFound: true);
        m_controll_mouse = m_controll.FindAction("mouse", throwIfNotFound: true);
        m_controll_jump = m_controll.FindAction("jump", throwIfNotFound: true);
        m_controll_sprint = m_controll.FindAction("sprint", throwIfNotFound: true);
        m_controll_leftclick = m_controll.FindAction("leftclick", throwIfNotFound: true);
        m_controll_uparrow = m_controll.FindAction("uparrow", throwIfNotFound: true);
        m_controll_leftarrow = m_controll.FindAction("leftarrow", throwIfNotFound: true);
        m_controll_rightarrow = m_controll.FindAction("rightarrow", throwIfNotFound: true);
        m_controll_Newaction = m_controll.FindAction("New action", throwIfNotFound: true);
        m_controll_enter = m_controll.FindAction("enter", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // controll
    private readonly InputActionMap m_controll;
    private List<IControllActions> m_ControllActionsCallbackInterfaces = new List<IControllActions>();
    private readonly InputAction m_controll_move;
    private readonly InputAction m_controll_mouse;
    private readonly InputAction m_controll_jump;
    private readonly InputAction m_controll_sprint;
    private readonly InputAction m_controll_leftclick;
    private readonly InputAction m_controll_uparrow;
    private readonly InputAction m_controll_leftarrow;
    private readonly InputAction m_controll_rightarrow;
    private readonly InputAction m_controll_Newaction;
    private readonly InputAction m_controll_enter;
    public struct ControllActions
    {
        private @Playeraction m_Wrapper;
        public ControllActions(@Playeraction wrapper) { m_Wrapper = wrapper; }
        public InputAction @move => m_Wrapper.m_controll_move;
        public InputAction @mouse => m_Wrapper.m_controll_mouse;
        public InputAction @jump => m_Wrapper.m_controll_jump;
        public InputAction @sprint => m_Wrapper.m_controll_sprint;
        public InputAction @leftclick => m_Wrapper.m_controll_leftclick;
        public InputAction @uparrow => m_Wrapper.m_controll_uparrow;
        public InputAction @leftarrow => m_Wrapper.m_controll_leftarrow;
        public InputAction @rightarrow => m_Wrapper.m_controll_rightarrow;
        public InputAction @Newaction => m_Wrapper.m_controll_Newaction;
        public InputAction @enter => m_Wrapper.m_controll_enter;
        public InputActionMap Get() { return m_Wrapper.m_controll; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControllActions set) { return set.Get(); }
        public void AddCallbacks(IControllActions instance)
        {
            if (instance == null || m_Wrapper.m_ControllActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ControllActionsCallbackInterfaces.Add(instance);
            @move.started += instance.OnMove;
            @move.performed += instance.OnMove;
            @move.canceled += instance.OnMove;
            @mouse.started += instance.OnMouse;
            @mouse.performed += instance.OnMouse;
            @mouse.canceled += instance.OnMouse;
            @jump.started += instance.OnJump;
            @jump.performed += instance.OnJump;
            @jump.canceled += instance.OnJump;
            @sprint.started += instance.OnSprint;
            @sprint.performed += instance.OnSprint;
            @sprint.canceled += instance.OnSprint;
            @leftclick.started += instance.OnLeftclick;
            @leftclick.performed += instance.OnLeftclick;
            @leftclick.canceled += instance.OnLeftclick;
            @uparrow.started += instance.OnUparrow;
            @uparrow.performed += instance.OnUparrow;
            @uparrow.canceled += instance.OnUparrow;
            @leftarrow.started += instance.OnLeftarrow;
            @leftarrow.performed += instance.OnLeftarrow;
            @leftarrow.canceled += instance.OnLeftarrow;
            @rightarrow.started += instance.OnRightarrow;
            @rightarrow.performed += instance.OnRightarrow;
            @rightarrow.canceled += instance.OnRightarrow;
            @Newaction.started += instance.OnNewaction;
            @Newaction.performed += instance.OnNewaction;
            @Newaction.canceled += instance.OnNewaction;
            @enter.started += instance.OnEnter;
            @enter.performed += instance.OnEnter;
            @enter.canceled += instance.OnEnter;
        }

        private void UnregisterCallbacks(IControllActions instance)
        {
            @move.started -= instance.OnMove;
            @move.performed -= instance.OnMove;
            @move.canceled -= instance.OnMove;
            @mouse.started -= instance.OnMouse;
            @mouse.performed -= instance.OnMouse;
            @mouse.canceled -= instance.OnMouse;
            @jump.started -= instance.OnJump;
            @jump.performed -= instance.OnJump;
            @jump.canceled -= instance.OnJump;
            @sprint.started -= instance.OnSprint;
            @sprint.performed -= instance.OnSprint;
            @sprint.canceled -= instance.OnSprint;
            @leftclick.started -= instance.OnLeftclick;
            @leftclick.performed -= instance.OnLeftclick;
            @leftclick.canceled -= instance.OnLeftclick;
            @uparrow.started -= instance.OnUparrow;
            @uparrow.performed -= instance.OnUparrow;
            @uparrow.canceled -= instance.OnUparrow;
            @leftarrow.started -= instance.OnLeftarrow;
            @leftarrow.performed -= instance.OnLeftarrow;
            @leftarrow.canceled -= instance.OnLeftarrow;
            @rightarrow.started -= instance.OnRightarrow;
            @rightarrow.performed -= instance.OnRightarrow;
            @rightarrow.canceled -= instance.OnRightarrow;
            @Newaction.started -= instance.OnNewaction;
            @Newaction.performed -= instance.OnNewaction;
            @Newaction.canceled -= instance.OnNewaction;
            @enter.started -= instance.OnEnter;
            @enter.performed -= instance.OnEnter;
            @enter.canceled -= instance.OnEnter;
        }

        public void RemoveCallbacks(IControllActions instance)
        {
            if (m_Wrapper.m_ControllActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IControllActions instance)
        {
            foreach (var item in m_Wrapper.m_ControllActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ControllActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ControllActions @controll => new ControllActions(this);
    public interface IControllActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnLeftclick(InputAction.CallbackContext context);
        void OnUparrow(InputAction.CallbackContext context);
        void OnLeftarrow(InputAction.CallbackContext context);
        void OnRightarrow(InputAction.CallbackContext context);
        void OnNewaction(InputAction.CallbackContext context);
        void OnEnter(InputAction.CallbackContext context);
    }
}
